openapi: 3.0.1
info:
  title: Projet Fil Rouge - Maximilien DERIVE
  description: API développée dans le cadre du projet Fil Rouge du MS SIO, CentraleSupélec
  contact:
    email: maximilien.derive@student-cs.fr
  version: 1.0.0
servers:
- url: https://redthreadapi.drv.p2021.ajoga.fr/
paths:
  /:
    get:
      tags:
      - Bienvenue
      summary: Page d'accueil de l'API
      responses:
        200:
          description: Succès
          content:
            '*/*':
              schema:
                type: string
                example: Bienvenue dans l'API Fil Rouge !
  /upload:
    post:
      tags:
      - Déposer un fichier
      summary: Dépôt de fichier et retour des métadonnées et des données au format
        JSON
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: Sélectionnez un fichier à charger
                  format: binary
        required: true
      responses:
        200:
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  DataInJson:
                    type: string
                    description: fichier traduit en JSON
                  Metadata:
                    type: object
                    properties:
                      Métadonnées associées au fichier:
                        type: string
                  Recognized:
                    type: object
                    properties:
                      Objets détectés dans l'image (uniquement JPG et PNG):
                        type: string
        401:
          description: Authentification manquante / Identifiant inconnu / Mot de passe
            incorrect
          content:
            application/json:
              schema:
                type: string
                example: '[+ Authentification nécessaire. Ajoutez l''option -u username:password,
                  + Identifiant inconnu, + Mot de passe incorrect, + Credentials invalides
                  !, + Profil AWS non trouvé]'
        413:
          description: Le fichier chargé est trop volumineux (> 10Mo)
          content:
            application/json:
              schema:
                type: string
                example: '[<html>, <head><title>413 Request Entity Too Large</title></head>,
                  <body>, <center><h1>413 Request Entity Too Large</h1></center>,
                  <hr><center>nginx/1.15.12</center>, </body>, </html>]'
        415:
          description: Fonctionnalité réclamée non supportée par le serveur.
          content:
            application/json:
              schema:
                type: string
                example: '[+ Extension inexistante ou non prise en charge., + Format
                  non pris en charge.]'
        500:
          description: Erreur interne au serveur
          content:
            application/json:
              schema:
                type: string
                example: '[+ Problème à l''ouverture de l''image. Format non pris
                  en charge., + Formats acceptés bmp csv docx gif jpg jpeg pdf png
                  txt, + Problème lors du chargement du fichier vers le bucket S3.,
                  + Fichier vide, + Aucun fichier sélectionné]'
        503:
          description: Service temporairement indisponible. Nombre de requêtes posibles
            dépassé (> 12/min)
          content:
            application/json:
              schema:
                type: string
                example: '[<html>, <head><title>503 Service Temporarily Unavailable</title></head>,
                  <body>, <center><h1>503 Service Temporarily Unavailable</h1></center>,
                  <hr><center>nginx/1.15.12</center>, </body>, </html>]'
      security:
      - BasicAuth: []
  /list_files:
    get:
      tags:
      - Consulter la liste des fichiers
      summary: Consultation la liste des noms des fichiers déposés dans le bucket
        S3 par les utilisateurs
      responses:
        200:
          description: Succès
          content:
            application/json:
              schema:
                type: string
                example: '[file0001 2021-03-12_16-36-25_test.pdf, file0002" 2021-03-12_16-37-13_test.jpg,
                  file0003 2021-03-12_16-37-14_test.jpg]'
        401:
          description: Authentification manquante / Identifiant inconnu / Mot de passe
            incorrect
          content:
            application/json:
              schema:
                type: string
                example: '[+ Authentification nécessaire. Ajoutez l''option -u username:password,
                  + Identifiant inconnu, + Mot de passe incorrect, + Credentials invalides
                  !, + Profil AWS non trouvé]'
        500:
          description: Erreur interne au serveur
          content:
            application/json:
              schema:
                type: string
                example: '[Un problème non géré est survenu.]'
        503:
          description: Service temporairement indisponible. Nombre de requêtes posibles
            dépassé (> 12/min)
          content:
            application/json:
              schema:
                type: string
                example: '[<html>, <head><title>503 Service Temporarily Unavailable</title></head>,
                  <body>, <center><h1>503 Service Temporarily Unavailable</h1></center>,
                  <hr><center>nginx/1.15.12</center>, </body>, </html>]'
      security:
      - BasicAuth: []
  /download/{filename}:
    get:
      tags:
      - Télécharger un fichier
      summary: Téléchargement d'un fichier depuis le bucket S3. Exécutez d'abord la
        commande ci-dessus, puis copiez-collez le nom d'un des fichiers du bucket
      parameters:
      - name: filename
        in: path
        description: Nom du fichier à télécharger
        required: true
        schema:
          type: string
      responses:
        200:
          description: Succès
          content:
            application/json:
              schema:
                type: string
                example: '[+ Contenu du fichier si CSV ou TXT]'
        204:
          description: Fichier inexistant dans le bucket
          content:
            application/json:
              schema:
                type: string
                example: '[HTTP/1.1 204 NO CONTENT]'
        401:
          description: Authentification manquante / Identifiant inconnu / Mot de passe
            incorrect
          content:
            application/json:
              schema:
                type: string
                example: '[+ Authentification nécessaire. Ajoutez l''option -u username:password,
                  + Identifiant inconnu, + Mot de passe incorrect, + Credentials invalides
                  !, + Profil AWS non trouvé]'
        500:
          description: Erreur interne au serveur
          content:
            application/json:
              schema:
                type: string
                example: '[Un problème non géré est survenu.]'
        503:
          description: Service temporairement indisponible. Nombre de requêtes posibles
            dépassé (> 12/min)
          content:
            application/json:
              schema:
                type: string
                example: '[<html>, <head><title>503 Service Temporarily Unavailable</title></head>,
                  <body>, <center><h1>503 Service Temporarily Unavailable</h1></center>,
                  <hr><center>nginx/1.15.12</center>, </body>, </html>]'
      security:
      - BasicAuth: []
  /empty_bucket:
    delete:
      tags:
      - Vider le bucket S3
      summary: Supprimer tous les fichiers du bucket S3 (uniquement pour l'admin)
      responses:
        200:
          description: Succès
          content:
            application/json:
              schema:
                type: string
                example: '[Tous les fichiers du bucket S3 ont ete supprimes.]'
        401:
          description: Authentification manquante / Identifiant inconnu / Mot de passe
            incorrect
          content:
            application/json:
              schema:
                type: string
                example: '[+ Authentification nécessaire. Ajoutez l''option -u username:password,
                  + Seul l''administrateur a accès à cette fonctionnalité., + Mot
                  de passe incorrect, + Credentials invalides !, + Profil AWS non
                  trouvé]'
        500:
          description: Erreur interne au serveur
          content:
            application/json:
              schema:
                type: string
                example: '[Un problème non géré est survenu.]'
        503:
          description: Service temporairement indisponible. Nombre de requêtes posibles
            dépassé (> 12/min)
          content:
            application/json:
              schema:
                type: string
                example: '[<html>, <head><title>503 Service Temporarily Unavailable</title></head>,
                  <body>, <center><h1>503 Service Temporarily Unavailable</h1></center>,
                  <hr><center>nginx/1.15.12</center>, </body>, </html>]'
      security:
      - BasicAuth: []
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
